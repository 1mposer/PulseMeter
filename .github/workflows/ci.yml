name: CI Security & Quality Pipeline

on:
  pull_request:
  push:
    branches: [ main, develop ]

jobs:
  security:
    runs-on: ubuntu-latest
    name: Security Scanning
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for secret scanning

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Check for secrets in git
        run: |
          # Fail if any credential files are tracked
          if git ls-files | grep -E 'config/(master\.key|credentials.*\.key)'; then
            echo "❌ Credential keys found in git history!"
            exit 1
          fi
          
          # Fail if any .env files are tracked
          if git ls-files | grep -E '(^|/)\.env(\.|$)'; then
            echo "❌ Environment files found in git history!"
            exit 1
          fi
          
          echo "✅ No secrets found in git"

      - name: Scan for Rails security vulnerabilities
        run: bin/brakeman -A --exit-on-warn --exit-on-error

      - name: Scan for dependency vulnerabilities
        run: bundle exec bundle audit check --update

      - name: Scan JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    # services:
    #  redis:
    #    image: redis
    #    ports:
    #      - 6379:6379
    #    options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Setup database
        env:
          RAILS_ENV: test
        run: |
          bin/rails db:prepare
          bin/rails db:migrate

      - name: Run tests
        env:
          RAILS_ENV: test
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rails test test:system

      - name: Verify database constraints
        env:
          RAILS_ENV: test
        run: |
          # Check that single session constraint exists
          bin/rails runner "
          if ActiveRecord::Base.connection.index_exists?(:sessions, [:table_id, :time_out], name: 'index_sessions_on_table_single_open')
            puts '✅ Single session constraint verified'
          else
            puts '❌ Single session constraint missing!'
            exit 1
          end
          "

      - name: Audit demo workflow test
        env:
          RAILS_ENV: test  
        run: |
          # Load audit demo data
          bin/rails runner db/seeds/audit_demo.rb
          
          # Verify demo data created
          bin/rails runner "
          if Table.find_by(name: 'Audit Table 1') && 
             Tag.find_by(token: 'AUDIT_TAG_1') &&
             Item.drinks.exists? && 
             Item.food.exists?
            puts '✅ Audit demo data verified'
          else
            puts '❌ Audit demo data incomplete!'
            exit 1
          end
          "

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
